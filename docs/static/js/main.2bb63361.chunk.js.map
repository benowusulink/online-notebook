{"version":3,"sources":["components/navbars/navbar1/assets/logo_transparent.png","components/navbars/navbar1/Navbar1.js","components/navbars/navbar2/assets/logo_transparent.png","components/navbars/navbar2/Navbar2.js","components/navbars/navbar3/assets/logo_transparent.png","components/navbars/navbar3/Navbar3.js","components/signin/Signin.js","components/register/Register.js","components/note/Note.js","components/view-note/ViewNote.js","components/notelist/Notelist.js","components/new-note/NewNote.js","components/note-ctn/NoteContainer.js","components/home/Home.js","containers/App.js","index.js"],"names":["Navbar1","onEmailChange","event","setState","email","target","value","onPasswordChange","password","buttonSubmit","props","onRouteChange","loadState","fetch","method","headers","body","JSON","stringify","state","then","res","json","info","alert","id","className","src","logo","alt","htmlFor","type","name","onChange","this","onClick","Component","Navbar2","console","log","Navbar3","Signin","Jumbotron","fluid","Register","onNameChange","includes","length","hash","required","Note","notetitle","map","data","i","noteIndex","setIndex","ViewNote","note","noteid","para","document","getElementById","forEach","notes","textContent","Notelist","onRoutechange","NewNote","onTitleChange","title","onNoteChange","saveButton","noteTitle","status","deleteButton","maxLength","placeholder","NoteContainer","route","notetitles","Home","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.2bb63361.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_transparent.2d95393d.png\";","//imports for the file\nimport React, { Component } from \"react\";\nimport \"./Navbar1.css\";\nimport logo from \"./assets/logo_transparent.png\";\n\n//React class component\nclass Navbar1 extends Component {\n  /*React life-cycle method constructor which will \nhold components state;\n*/\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n  }\n\n  /*Function within class component that sets email\n   */\n  onEmailChange = (event) => {\n    this.setState({ email: event.target.value });\n  };\n\n  /*Function within class component that sets password\n   */\n  onPasswordChange = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  /*Function within class component that deals with \nthe button submit\n*/\n  buttonSubmit = () => {\n    const { onRouteChange, loadState } = this.props;\n    /*const saltRounds = 10;\n\t\tconst salt = bcrypt.genSaltSync(saltRounds);\n\t\tconst hash = bcrypt.hashSync(this.state.password, salt);\n\t\t*/\n\n    /*API POST request which sends json data within its body \nto the URL\n*/\n    fetch(\"https://enigmatic-fjord-29762.herokuapp.com/signin\", {\n      method: \"post\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n      }),\n    })\n      /* API request returns a promise which is json data,\nfile has to be converted into javascript object to be used\nwithin React javascript\n*/\n      .then((res) => {\n        return res.json();\n      })\n      /* If API returns json data we need, the data is used for the \nfunction in this components passed as props, the route of the app\nis also changed to the home screen \n*/\n      .then((res) => {\n        if (res.info) {\n          loadState(res.info);\n          onRouteChange(\"home\");\n        } else if (\"error\") {\n\n        /* If API returns a \"error\" message an alert is prompt to the\nuser to please enter correct details \n*/\n          alert(\"Wrong email or password\");\n        }\n      });\n  };\n\n  /* React Life Cycle method Render\n   */\n  render() {\n    /* Rendered component which will be displayed to the user\n     */\n    return (\n      <nav id={`main-nav-1`}>\n        <ul>\n          <li className={`logo-image`}>\n            <img src={logo} alt={`logo`} />\n          </li>\n          <li className={`sign-in-link1`}>\n            <label htmlFor={`email`}>{`Email:`}</label>\n            <input\n              type={`email`}\n              name={`email`}\n              onChange={this.onEmailChange}\n            />\n          </li>\n          <li className={`sign-in-link1`} id={`password1`}>\n            <label htmlFor={`password`}>{`Password:`}</label>\n            <input\n              type={`password`}\n              name={`password`}\n              onChange={this.onPasswordChange}\n            />\n          </li>\n          <li>\n            <input\n              type={`submit`}\n              value={`Login`}\n              id={`submit1`}\n              onClick={this.buttonSubmit}\n            />\n          </li>\n          <li>\n            <input\n              type={`submit`}\n              value={`Register`}\n              id={`register`}\n              onClick={() => {\n                this.props.onRouteChange(\"register\");\n              }}\n            />\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\n/* exporting component to be used with other files\n */\nexport default Navbar1;\n","export default __webpack_public_path__ + \"static/media/logo_transparent.2d95393d.png\";","//imports for the file\nimport React, { Component } from \"react\";\nimport \"./Navbar2.css\";\nimport logo from \"./assets/logo_transparent.png\";\n\n//React class component\nclass Navbar2 extends Component {\n  /*React life-cycle method constructor which will \nhold components state;\n*/\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n  }\n\n  /*Function within class component that sets email\n   */\n  onEmailChange = (event) => {\n    this.setState({ email: event.target.value });\n    console.log(event.target.value);\n  };\n\n  /*Function within class component that sets password\n   */\n  onPasswordChange = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  /*Function within class component that deals with \n  the button submit\n  */\n  buttonSubmit = () => {\n    const { onRouteChange } = this.props;\n    /*const saltRounds = 10;\n\t\tconst salt = bcrypt.genSaltSync(saltRounds);\n\t\tconst hash = bcrypt.hashSync(this.state.password, salt);\n\t\t*/\n\n    /*API POST request which sends a json data within its body \n    to the URL\n    */\n    fetch(\"https://enigmatic-fjord-29762.herokuapp.com/signin\", {\n      method: \"post\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n      }),\n    })\n      /* API request returns a promise which is json data,\n      file has to be converted into javascript object to be used\n      within React javascript\n      */\n      .then((res) => {\n        return res.json();\n      })\n\n      /* If API returns json data we need, the data is used for the \n      function in this components passed as props, the route of the app\n      is also changed to the home screen \n      */\n      .then((res) => {\n        if (res.info) {\n          this.props.loadState(res.info);\n          onRouteChange(\"home\");\n        } else if (\"error\") {\n        /* If API returns a \"error\" message an alert is prompt to the\n      user to please enter correct details \n      */\n          alert(\"Wrong email or password\");\n        }\n      });\n  };\n\n  /* React Life Cycle method Render\n   */\n  render() {\n    return (\n      <nav id={`main-nav-1`}>\n        <ul>\n          <li className={`logo-image`}>\n            <img src={logo} alt={`logo`} />\n          </li>\n          <li className={`sign-in-link`}>\n            <label htmlFor={`email`}>{`Email:`}</label>\n            <input\n              type={`email`}\n              name={`email`}\n              onChange={this.onEmailChange}\n            />\n          </li>\n          <li className={`sign-in-link`} id={`password2`}>\n            <label htmlFor={`password`}>{`Password:`}</label>\n            <input\n              type={`password`}\n              name={`password`}\n              onChange={this.onPasswordChange}\n            />\n          </li>\n          <li>\n            <input\n              type={`submit`}\n              value={`Login`}\n              id={`submit`}\n              onClick={this.buttonSubmit}\n            />\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\n/* exporting component to be used with other files\n */\nexport default Navbar2;\n","export default __webpack_public_path__ + \"static/media/logo_transparent.2d95393d.png\";","import React from \"react\";\nimport \"./Navbar3.css\";\nimport logo from \"./assets/logo_transparent.png\";\n\nconst Navbar3 = ({ onRouteChange }) => {\n  return (\n    <nav id={`main-nav-2`}>\n      <ul>\n        <li className={`logo-image2`}>\n          <img src={logo} alt={`logo`} />\n        </li>\n        <li className={`title`}>\n          <h1> {`Online Notebook`}</h1>\n        </li>\n        <li>\n          <input\n            type={`submit`}\n            value={`Logout`}\n            id={`logout`}\n            onClick={() => {\n              onRouteChange(\"signin\");\n            }}\n          />\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar3;\n","//imports for the file\nimport React from \"react\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport \"./Signin.css\";\nimport logo from \"../navbars/navbar1/assets/logo_transparent.png\";\n\n//React dumb component which accepts props\nconst Signin = (props) => {\n  return (\n    <Jumbotron fluid id={`jumbotron`}>\n      <h1>Online Notebook </h1>\n      <img src={logo} />\n    </Jumbotron>\n  );\n};\n\n// exporting component to be used with other files\nexport default Signin;\n","//imports for the file\nimport React, { Component } from \"react\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport \"./Register.css\";\n\n//React class component\nclass Register extends Component {\n  /*React life-cycle method constructor which will \nhold components state;\n*/\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n    };\n  }\n\n  /*Function within class component that sets name\n   */\n  onNameChange = (event) => {\n    this.setState({ name: event.target.value });\n  };\n\n  /*Function within class component that sets password\n   */\n  onPasswordChange = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  /*Function within class component that sets email\n   */\n  onEmailChange = (event) => {\n    this.setState({ email: event.target.value });\n  };\n\n  /*Function within class component that deals with \n  the button submit\n  */\n  buttonSubmit = () => {\n    /*const salt = bcrypt.genSaltSync(10);\n\t\tconst hash = bcrypt.hashSync(this.state.password, salt);\n\t\tconst {onRouteChange} = this.props;\n\t\t*/\n\n    /*Conditions set for the requriements needed for the API\n    request\n    */\n    if (\n      this.state.name === \"\" ||\n      this.state.email === \"\" ||\n      this.state.password === \"\" ||\n      !this.state.email.includes(\"@\") ||\n      this.state.password.length < 5\n    ) {\n      /*if conditions arent met the function will return an alert\n       */\n      alert(\n        \"Please enter a name, Valid email or a password with more than 5 characters\"\n      );\n    } else {\n\n    /*If the conditions are passed an API POST request which sends  \n    json data within its body to the URL\n    */\n      fetch(\"https://enigmatic-fjord-29762.herokuapp.com/register\", {\n        method: \"post\",\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify({\n          email: this.state.email,\n          hash: this.state.password,\n          name: this.state.name,\n        }),\n      })\n        /* API request returns a promise which is json data,\n      file has to be converted into javascript object to be used\n      within React javascript\n      */\n        .then((res) => {\n          return res.json();\n        })\n\n        /* If API returns json data we need, the data is used for the \n      function in this components passed as props, the route of the app\n      is also changed to the home screen \n      */\n        .then((res) => {\n          if (res.info) {\n            this.props.loadState(res.info);\n            this.props.onRouteChange(\"home\");\n          } else if (\"error\") {\n\n          /* If API returns a \"error\" message an alert is prompt to the\n      user to please enter correct details \n      */\n            alert(\n              \"This details have already been used, Please register with different details\"\n            );\n          }\n        });\n    }\n  };\n\n  /* React Life Cycle method Render\n   */\n  render() {\n    /* Rendered component which will be displayed to the user\n     */\n    return (\n      <Jumbotron fluid id={`jumbotron`} className={`register`}>\n        <h1>Register</h1>\n        <h4>{`Please enter a valid email and a password over 5 characters`}</h4>\n        <section id={`register-form`}>\n          <ul>\n            <li>\n              <label htmlFor={`name`}>{`Name:`}</label>\n              <input\n                type={`text`}\n                name={`name`}\n                required\n                onChange={this.onNameChange}\n              />\n            </li>\n            <li>\n              <label htmlFor={`email`}>{`Email:`}</label>\n              <input\n                type={`email`}\n                name={`email`}\n                required\n                onChange={this.onEmailChange}\n              />\n            </li>\n            <li>\n              <label htmlFor={`password`}>{`Password:`}</label>\n              <input\n                type={`password`}\n                name={`password`}\n                onChange={this.onPasswordChange}\n                required\n              />\n            </li>\n            <li>\n              <input\n                type={`submit`}\n                value={`Register`}\n                id={`register-btn`}\n                onClick={this.buttonSubmit}\n              />\n            </li>\n          </ul>\n        </section>\n      </Jumbotron>\n    );\n  }\n}\n\n/* exporting component to be used with other files\n */\nexport default Register;\n","//imports for the file\nimport React from \"react\";\nimport \"./Note.css\";\n\n//React dumb component which accepts props\nconst Note = (props) => {\n  const setIndex = (data) => {\n    props.noteIndex(data);\n  };\n\n  return props.notetitle.map((data, i) => {\n    return (\n      <article id={`note-main`} key={i}>\n        <div>\n          <p\n            key={i}\n            id={`para`}\n            onClick={() => {\n              setIndex(i);\n            }}\n          >\n            {\" \"}\n            {data}{\" \"}\n          </p>\n        </div>\n      </article>\n    );\n  });\n};\n\n// exporting component to be used with other files\nexport default Note;\n","//imports for the file\nimport React from \"react\";\nimport \"./ViewNote.css\";\n\n//React dumb component which accepts props\nconst ViewNote = (props) => {\n  const para = document.getElementById(\"view-note-text\");\n  const data = (note, noteid) => {\n    note.forEach((notes, i) => {\n      if (i === noteid) {\n        console.log(notes, para);\n        para.textContent = notes;\n      }\n    });\n  };\n\n  if (para !== null) {\n    return (\n      <main id={`view-note`}>\n        <p id={`view-note-text`}>{data(props.note, props.noteid)}</p>\n      </main>\n    );\n  } else {\n    return (\n      <main id={`view-note`}>\n        <p id={`view-note-text`}>{`double click note on the side to view`}</p>\n      </main>\n    );\n  }\n};\n\n// exporting component to be used with other files\nexport default ViewNote;\n","//imports for the file\nimport React from \"react\";\nimport \"./Notelist.css\";\nimport Note from \"../note/Note.js\";\nimport ViewNote from \"../view-note/ViewNote.js\";\n\n//React dumb component which accepts props\nconst Notelist = (props) => {\n  //Return for the dumb component\n  return (\n    <div id={`main-div`}>\n      <button\n        onClick={() => {\n          props.onRoutechange(\"new-note\");\n        }}\n      >\n        {`New note`}\n      </button>\n      <main id={`notelist`}>\n        <section id={`notelist-notes`}>\n          <Note notetitle={props.notetitle} noteIndex={props.noteIndex} />\n        </section>\n        <section id={`view-note1`}>\n          <ViewNote note={props.note} noteid={props.noteid} />\n        </section>\n      </main>\n    </div>\n  );\n};\n\n// exporting component to be used with other files\nexport default Notelist;\n","//imports for the file\nimport React, { Component } from \"react\";\nimport \"./NewNote.css\";\n\n//React class component\nclass NewNote extends Component {\n  /*React life-cycle method constructor which will \nhold components state;\n*/\n  constructor() {\n    super();\n    this.state = { title: \"\", note: \"\" };\n  }\n\n  /*Function within class component that sets title\n   */\n  onTitleChange = (event) => {\n    this.setState({ title: event.target.value });\n  };\n\n  /*Function within class component that sets note\n   */\n  onNoteChange = (event) => {\n    this.setState({ note: event.target.value });\n  };\n\n  /*Function within class component that deals with \nthe button submit\n*/\n  saveButton = () => {\n    const { id, loadState } = this.props;\n\n    //API POST request which sends json data within its body to the URL\n    fetch(\"https://enigmatic-fjord-29762.herokuapp.com/new-note\", {\n      method: \"post\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({\n        id: id,\n        noteTitle: this.state.title,\n        note: this.state.note,\n      }),\n    })\n      /* API request returns a promise which is json data,\n      file has to be converted into javascript object to be used\n      within React javascript\n      */\n      .then((res) => {\n        return res.json();\n      })\n\n      /* If API returns json data we need, the data is used for the \n      function in this components passed as props, the route of the app\n      is also changed to the home screen \n      */\n      .then((res) => {\n        console.log(res);\n        if (res.status === \"success\") {\n          this.deleteButton();\n          loadState(res.info);\n          alert(\"note saved :)\");\n        }\n      });\n  };\n\n  /*Function within class component that erases the state and inputs\n   */\n  deleteButton = () => {\n    this.setState({\n      title: \"\",\n      note: \"\",\n    });\n\n    document.getElementById(\"notetitle\").value = \"\";\n    document.getElementById(\"notetext\").value = \"\";\n  };\n\n  /* React Life Cycle method Render\n   */\n  render() {\n    const { onRoutechange } = this.props;\n\n    /* Rendered component which will be displayed to the user\n     */\n    return (\n      <main id={`new-note-main`}>\n        <section id={`sec-1`}>\n          <label htmlFor=\"title\">{`Note Title:`}</label>\n          <input\n            type={`text`}\n            name={\"title\"}\n            maxLength={`25`}\n            id={`notetitle`}\n            onChange={this.onTitleChange}\n            placeholder={`enter note title`}\n          />\n          <button\n            onClick={() => {\n              onRoutechange(\"notelist\");\n            }}\n          >\n            View notes\n          </button>\n        </section>\n        <textarea\n          id=\"notetext\"\n          name=\"title\"\n          placeholder={`write your new note here`}\n          maxLength=\"300\"\n          onChange={this.onNoteChange}\n        ></textarea>\n        <section id={`note-btns`}>\n          <button onClick={this.deleteButton}>{`Delete`}</button>\n          <button onClick={this.saveButton}>{`Save`}</button>\n        </section>\n      </main>\n    );\n  }\n}\n\n/* exporting component to be used with other files\n */\n\nexport default NewNote;\n","//imports for the file\nimport React, { Component } from \"react\";\nimport Notelist from \"../notelist/Notelist.js\";\nimport NewNote from \"../new-note/NewNote.js\";\n\n//React class component\nclass NoteContainer extends Component {\n  /*React life-cycle method constructor which will \nhold components state;\n*/\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: \"new-note\",\n\n      id: this.props.id,\n\n      notetitle: [],\n\n      note: [],\n\n      noteid: 0,\n    };\n  }\n\n  /*React life-cycle method componentDidMount which will \ngets activated when component has fully mounted and rendered\non the webpage, will cause the component to re reneder;\n*/\n  componentDidMount() {\n    fetch(\"https://enigmatic-fjord-29762.herokuapp.com/note-container\", {\n      method: \"post\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({\n        id: this.state.id,\n      }),\n    })\n      /* API request returns a promise which is json data,\n      file has to be converted into javascript object to be used\n      within React javascript\n      */\n      .then((res) => {\n        return res.json();\n      })\n\n      /* If API returns json data we need, the data is used for the \n      function in this components passed as props\n      */\n      .then((res) => {\n        this.loadState(res.info);\n      });\n  }\n\n  /* change route for note container */\n  onRoutechange = (route) => {\n    this.setState({ route: route });\n  };\n\n  /* loading component state with data from \n\tcomponentDidMount */\n  loadState = (res) => {\n    /* looping through fetched data and setting the state\n     */\n    const notetitles = res.map((title) => {\n      return title.notetitle;\n    });\n\n    const notes = res.map((notes) => {\n      return notes.note;\n    });\n\n    this.setState({\n      notetitle: notetitles,\n      note: notes,\n      id: this.props.id,\n    });\n  };\n\n  /* changing the value of the index of the \n\tnote */\n  noteIndex = (value) => {\n    this.setState({\n      noteid: value,\n    });\n  };\n  /* React Life Cycle method Render\n   */\n\n  render() {\n    switch (this.state.route) {\n      case \"new-note\":\n        return (\n          <NewNote\n            onRoutechange={this.onRoutechange}\n            id={this.state.id}\n            loadState={this.loadState}\n          />\n        );\n\n      case \"notelist\":\n        return (\n          <Notelist\n            onRoutechange={this.onRoutechange}\n            note={this.state.note}\n            notetitle={this.state.notetitle}\n            noteIndex={this.noteIndex}\n            noteid={this.state.noteid}\n          />\n        );\n\n      default:\n        return (\n          <NewNote onRoutechange={this.onRoutechange} id={this.state.id} />\n        );\n    }\n  }\n}\n\n/* exporting component to be used with other files\n */\nexport default NoteContainer;\n","//imports for the file\nimport React from \"react\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport \"./Home.css\";\nimport NoteContainer from \"../note-ctn/NoteContainer.js\";\n\n//React dumb component which accepts props\nconst Home = (props) => {\n  //Return for the dumb component\n  return (\n    <Jumbotron fluid id={`jumbotron`}>\n      <h1>{`Welcome ${props.name}`}</h1>\n      <h2 id={`h2-message`}>\n        {\" \"}\n        Create a new note or view existing notes below{\" \"}\n      </h2>\n      <NoteContainer id={props.id} />\n    </Jumbotron>\n  );\n};\n\n// exporting component to be used with other files\nexport default Home;\n","//imports for the file\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navbar1 from \"../components/navbars/navbar1/Navbar1.js\";\nimport Navbar2 from \"../components/navbars/navbar2/Navbar2.js\";\nimport Navbar3 from \"../components/navbars/navbar3/Navbar3.js\";\nimport Signin from \"../components/signin/Signin.js\";\nimport Register from \"../components/register/Register.js\";\nimport Home from \"../components/home/Home.js\";\n\n//React class component\nclass App extends Component {\n  /*React life-cycle method constructor which will \nhold components state;\n*/\n  constructor() {\n    super();\n    this.state = { route: \"signin\", id: \"\", name: \"\" };\n  }\n\n  //Function within class component that sets route of the app\n\n  onRouteChange = (route) => {\n    this.setState({ route: route });\n  };\n\n  //Function within class component that loads data for state\n  loadState = (data) => {\n    this.setState({ id: data.id });\n    this.setState({ name: data.name });\n  };\n\n  //  React Life Cycle method Render\n  render() {\n    switch (this.state.route) {\n      case \"signin\":\n        return (\n          <div>\n            <Navbar1\n              onRouteChange={this.onRouteChange}\n              loadState={this.loadState}\n            />\n            <Signin />\n          </div>\n        );\n\n      case \"register\":\n        return (\n          <div>\n            <Navbar2\n              onRouteChange={this.onRouteChange}\n              loadState={this.loadState}\n            />\n            <Register\n              onRouteChange={this.onRouteChange}\n              loadState={this.loadState}\n            />\n          </div>\n        );\n\n      case \"home\":\n        return (\n          <div>\n            <Navbar3 onRouteChange={this.onRouteChange} />\n            <Home id={this.state.id} name={this.state.name} />\n          </div>\n        );\n\n      default:\n        return (\n          <div>\n            <Navbar1 onRouteChange={this.onRouteChange} />\n            <Signin />\n          </div>\n        );\n    }\n  }\n}\n\n// exporting component to be used with other files\n\nexport default App;\n","/* Global app imports */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\n\n/* Compoent that will be mounted into the the html element \ncalled root, this is done through the reactdom package  */\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}